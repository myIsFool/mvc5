//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class wystuEntities : DbContext
    {
        public wystuEntities()
            : base("name=wystuEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cs> cs { get; set; }
        public virtual DbSet<T_ChildPackage> T_ChildPackage { get; set; }
        public virtual DbSet<T_ChildPackagePlateRelation> T_ChildPackagePlateRelation { get; set; }
        public virtual DbSet<T_Course> T_Course { get; set; }
        public virtual DbSet<T_ErrorInfo> T_ErrorInfo { get; set; }
        public virtual DbSet<T_ErrorInfo_copy> T_ErrorInfo_copy { get; set; }
        public virtual DbSet<T_ErrorTag> T_ErrorTag { get; set; }
        public virtual DbSet<T_Explain> T_Explain { get; set; }
        public virtual DbSet<T_Package> T_Package { get; set; }
        public virtual DbSet<T_PackageCourseRelation> T_PackageCourseRelation { get; set; }
        public virtual DbSet<T_Paper> T_Paper { get; set; }
        public virtual DbSet<T_PaperQuestions> T_PaperQuestions { get; set; }
        public virtual DbSet<T_PaperQuestionScore> T_PaperQuestionScore { get; set; }
        public virtual DbSet<T_Plate> T_Plate { get; set; }
        public virtual DbSet<T_PlateStructureRelation> T_PlateStructureRelation { get; set; }
        public virtual DbSet<T_PlateTag> T_PlateTag { get; set; }
        public virtual DbSet<T_PlateTaskRelation> T_PlateTaskRelation { get; set; }
        public virtual DbSet<T_QuestionCollect> T_QuestionCollect { get; set; }
        public virtual DbSet<T_Structure> T_Structure { get; set; }
        public virtual DbSet<T_Suggest> T_Suggest { get; set; }
        public virtual DbSet<T_Task> T_Task { get; set; }
        public virtual DbSet<T_TaskMaterialRelation> T_TaskMaterialRelation { get; set; }
        public virtual DbSet<T_TaskProcess> T_TaskProcess { get; set; }
        public virtual DbSet<T_TaskProcessDetail> T_TaskProcessDetail { get; set; }
        public virtual DbSet<T_UserDelMessages> T_UserDelMessages { get; set; }
        public virtual DbSet<T_UserOrders> T_UserOrders { get; set; }
        public virtual DbSet<T_UserPackage> T_UserPackage { get; set; }
        public virtual DbSet<T_UserPackage_copy> T_UserPackage_copy { get; set; }
        public virtual DbSet<T_UserPackage_copy1> T_UserPackage_copy1 { get; set; }
        public virtual DbSet<T_UserPackage_copy2> T_UserPackage_copy2 { get; set; }
        public virtual DbSet<T_UserPackage_copy3> T_UserPackage_copy3 { get; set; }
        public virtual DbSet<T_UserPackage_copy4> T_UserPackage_copy4 { get; set; }
        public virtual DbSet<T_UserPayDetail> T_UserPayDetail { get; set; }
        public virtual DbSet<T_UserReadMessages> T_UserReadMessages { get; set; }
        public virtual DbSet<T_UserTask> T_UserTask { get; set; }
        public virtual DbSet<T_UserTask_copy> T_UserTask_copy { get; set; }
        public virtual DbSet<T_UserTask_copy1> T_UserTask_copy1 { get; set; }
        public virtual DbSet<T_Vedio> T_Vedio { get; set; }
        public virtual DbSet<T_VirtualMoneyDetails> T_VirtualMoneyDetails { get; set; }
        public virtual DbSet<new_UserTask0508> new_UserTask0508 { get; set; }
        public virtual DbSet<T_ErrorQuestion> T_ErrorQuestion { get; set; }
        public virtual DbSet<t_userpackage1128> t_userpackage1128 { get; set; }
        public virtual DbSet<t_usertaks_20180619> t_usertaks_20180619 { get; set; }
        public virtual DbSet<t_usertaskback1225> t_usertaskback1225 { get; set; }
        public virtual DbSet<t_usertaskBak2017> t_usertaskBak2017 { get; set; }
        public virtual DbSet<T_UserVersion> T_UserVersion { get; set; }
        public virtual DbSet<T_Version> T_Version { get; set; }
    
        [DbFunction("wystuEntities", "F_Split")]
        public virtual IQueryable<F_Split_Result> F_Split(string splitString, string separator)
        {
            var splitStringParameter = splitString != null ?
                new ObjectParameter("SplitString", splitString) :
                new ObjectParameter("SplitString", typeof(string));
    
            var separatorParameter = separator != null ?
                new ObjectParameter("Separator", separator) :
                new ObjectParameter("Separator", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<F_Split_Result>("[wystuEntities].[F_Split](@SplitString, @Separator)", splitStringParameter, separatorParameter);
        }
    
        [DbFunction("wystuEntities", "fn_StringSplitTable")]
        public virtual IQueryable<fn_StringSplitTable_Result> fn_StringSplitTable(string str, string split)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var splitParameter = split != null ?
                new ObjectParameter("split", split) :
                new ObjectParameter("split", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_StringSplitTable_Result>("[wystuEntities].[fn_StringSplitTable](@str, @split)", strParameter, splitParameter);
        }
    
        [DbFunction("wystuEntities", "parseJSON")]
        public virtual IQueryable<parseJSON_Result> parseJSON(string jSON)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<parseJSON_Result>("[wystuEntities].[parseJSON](@JSON)", jSONParameter);
        }
    
        public virtual int addErrorQuestions(string tabJson)
        {
            var tabJsonParameter = tabJson != null ?
                new ObjectParameter("tabJson", tabJson) :
                new ObjectParameter("tabJson", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addErrorQuestions", tabJsonParameter);
        }
    
        public virtual ObjectResult<Getcourse_Result> Getcourse(Nullable<int> userid, Nullable<int> packageid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getcourse_Result>("Getcourse", useridParameter, packageidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<Geterrorbytask_Result> Geterrorbytask(Nullable<int> userid, Nullable<int> taskid, Nullable<int> packageid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Geterrorbytask_Result>("Geterrorbytask", useridParameter, taskidParameter, packageidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<Geterrorlist_Result> Geterrorlist(Nullable<int> userid, Nullable<int> packageid, Nullable<int> pid, Nullable<int> type)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Geterrorlist_Result>("Geterrorlist", useridParameter, packageidParameter, pidParameter, typeParameter);
        }
    
        public virtual ObjectResult<Geterrorquestion_Result> Geterrorquestion(Nullable<int> userid, Nullable<int> type, Nullable<int> packageid, Nullable<int> pid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Geterrorquestion_Result>("Geterrorquestion", useridParameter, typeParameter, packageidParameter, pidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<GeterrorquestionAll_Result> GeterrorquestionAll(Nullable<int> userid, Nullable<int> type, Nullable<int> packageid, Nullable<int> pid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GeterrorquestionAll_Result>("GeterrorquestionAll", useridParameter, typeParameter, packageidParameter, pidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<Getorderdetail_Result> Getorderdetail(string id, Nullable<int> packageid)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getorderdetail_Result>("Getorderdetail", idParameter, packageidParameter);
        }
    
        public virtual ObjectResult<GetQuestionByPackage_Result> GetQuestionByPackage(Nullable<int> packageid)
        {
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionByPackage_Result>("GetQuestionByPackage", packageidParameter);
        }
    
        public virtual ObjectResult<Getstagedetail_Result> Getstagedetail(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getstagedetail_Result>("Getstagedetail", useridParameter);
        }
    
        public virtual ObjectResult<Getstruct_Result> Getstruct(Nullable<int> userid, Nullable<int> packageid, Nullable<int> plateid, string sid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            var sidParameter = sid != null ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getstruct_Result>("Getstruct", useridParameter, packageidParameter, plateidParameter, sidParameter);
        }
    
        public virtual ObjectResult<Getsummary_Result> Getsummary(Nullable<int> userid, Nullable<int> packageid, Nullable<int> plateid, Nullable<int> type)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getsummary_Result>("Getsummary", useridParameter, packageidParameter, plateidParameter, typeParameter);
        }
    
        public virtual ObjectResult<Gettaskdetail_nostruct_Result> Gettaskdetail_nostruct(Nullable<int> userid, Nullable<int> packageid, Nullable<int> plateid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Gettaskdetail_nostruct_Result>("Gettaskdetail_nostruct", useridParameter, packageidParameter, plateidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<Gettaskdetail_nostructbyios_Result> Gettaskdetail_nostructbyios(Nullable<int> userid, Nullable<int> packageid, Nullable<int> plateid, Nullable<int> courseid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Gettaskdetail_nostructbyios_Result>("Gettaskdetail_nostructbyios", useridParameter, packageidParameter, plateidParameter, courseidParameter);
        }
    
        public virtual ObjectResult<Gettaskdetail_struct_Result> Gettaskdetail_struct(Nullable<int> userid, Nullable<int> structid, Nullable<int> packageid, Nullable<int> plateid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var structidParameter = structid.HasValue ?
                new ObjectParameter("structid", structid) :
                new ObjectParameter("structid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Gettaskdetail_struct_Result>("Gettaskdetail_struct", useridParameter, structidParameter, packageidParameter, plateidParameter);
        }
    
        public virtual ObjectResult<Gettaskdetail_structbyios_Result> Gettaskdetail_structbyios(Nullable<int> userid, Nullable<int> structid, Nullable<int> packageid, Nullable<int> plateid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var structidParameter = structid.HasValue ?
                new ObjectParameter("structid", structid) :
                new ObjectParameter("structid", typeof(int));
    
            var packageidParameter = packageid.HasValue ?
                new ObjectParameter("packageid", packageid) :
                new ObjectParameter("packageid", typeof(int));
    
            var plateidParameter = plateid.HasValue ?
                new ObjectParameter("plateid", plateid) :
                new ObjectParameter("plateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Gettaskdetail_structbyios_Result>("Gettaskdetail_structbyios", useridParameter, structidParameter, packageidParameter, plateidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> P_AddtoFavorites(Nullable<int> qid, Nullable<int> uid, Nullable<int> pid, string answer, Nullable<int> gid, Nullable<int> ptype)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var gidParameter = gid.HasValue ?
                new ObjectParameter("gid", gid) :
                new ObjectParameter("gid", typeof(int));
    
            var ptypeParameter = ptype.HasValue ?
                new ObjectParameter("ptype", ptype) :
                new ObjectParameter("ptype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("P_AddtoFavorites", qidParameter, uidParameter, pidParameter, answerParameter, gidParameter, ptypeParameter);
        }
    
        public virtual int P_clearUserInfo(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_clearUserInfo", userNameParameter);
        }
    
        public virtual int P_ExamsEnd(string ua, Nullable<int> qc, Nullable<int> uid, string comQid, string complatecqid, string rightQid, Nullable<double> score, Nullable<int> pid, Nullable<int> status, Nullable<int> plid, Nullable<int> correctSmallSubject, Nullable<int> errorSmallSubject, Nullable<int> emptySmallSubject, string bigSubject)
        {
            var uaParameter = ua != null ?
                new ObjectParameter("ua", ua) :
                new ObjectParameter("ua", typeof(string));
    
            var qcParameter = qc.HasValue ?
                new ObjectParameter("qc", qc) :
                new ObjectParameter("qc", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var comQidParameter = comQid != null ?
                new ObjectParameter("comQid", comQid) :
                new ObjectParameter("comQid", typeof(string));
    
            var complatecqidParameter = complatecqid != null ?
                new ObjectParameter("complatecqid", complatecqid) :
                new ObjectParameter("complatecqid", typeof(string));
    
            var rightQidParameter = rightQid != null ?
                new ObjectParameter("rightQid", rightQid) :
                new ObjectParameter("rightQid", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(double));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var plidParameter = plid.HasValue ?
                new ObjectParameter("plid", plid) :
                new ObjectParameter("plid", typeof(int));
    
            var correctSmallSubjectParameter = correctSmallSubject.HasValue ?
                new ObjectParameter("correctSmallSubject", correctSmallSubject) :
                new ObjectParameter("correctSmallSubject", typeof(int));
    
            var errorSmallSubjectParameter = errorSmallSubject.HasValue ?
                new ObjectParameter("errorSmallSubject", errorSmallSubject) :
                new ObjectParameter("errorSmallSubject", typeof(int));
    
            var emptySmallSubjectParameter = emptySmallSubject.HasValue ?
                new ObjectParameter("emptySmallSubject", emptySmallSubject) :
                new ObjectParameter("emptySmallSubject", typeof(int));
    
            var bigSubjectParameter = bigSubject != null ?
                new ObjectParameter("bigSubject", bigSubject) :
                new ObjectParameter("bigSubject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ExamsEnd", uaParameter, qcParameter, uidParameter, comQidParameter, complatecqidParameter, rightQidParameter, scoreParameter, pidParameter, statusParameter, plidParameter, correctSmallSubjectParameter, errorSmallSubjectParameter, emptySmallSubjectParameter, bigSubjectParameter);
        }
    
        public virtual ObjectResult<P_GetPackageTime_Result> P_GetPackageTime(Nullable<int> uid, Nullable<int> pid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetPackageTime_Result>("P_GetPackageTime", uidParameter, pidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> P_GetTaskCountByCid(Nullable<int> cid, Nullable<int> uid, Nullable<int> pid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("P_GetTaskCountByCid", cidParameter, uidParameter, pidParameter);
        }
    
        public virtual ObjectResult<P_GetTaskListBySid_Result> P_GetTaskListBySid(Nullable<int> uid, Nullable<int> pid, Nullable<int> type, Nullable<int> paid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var paidParameter = paid.HasValue ?
                new ObjectParameter("paid", paid) :
                new ObjectParameter("paid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetTaskListBySid_Result>("P_GetTaskListBySid", uidParameter, pidParameter, typeParameter, paidParameter);
        }
    
        public virtual ObjectResult<P_QueryPlanTaskCount_Result> P_QueryPlanTaskCount(Nullable<int> uid, Nullable<int> pid, Nullable<int> cid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_QueryPlanTaskCount_Result>("P_QueryPlanTaskCount", uidParameter, pidParameter, cidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_setXnb(Nullable<int> uid, Nullable<int> tid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var tidParameter = tid.HasValue ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_setXnb", uidParameter, tidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_AddErrorQuestion(Nullable<int> taskid, Nullable<int> qid, Nullable<int> uid, Nullable<int> packageId, Nullable<int> qType, Nullable<int> plateId, Nullable<int> plateType, string userAnwser, Nullable<int> errorTag, Nullable<int> groupId, string errorContent)
        {
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("packageId", packageId) :
                new ObjectParameter("packageId", typeof(int));
    
            var qTypeParameter = qType.HasValue ?
                new ObjectParameter("qType", qType) :
                new ObjectParameter("qType", typeof(int));
    
            var plateIdParameter = plateId.HasValue ?
                new ObjectParameter("plateId", plateId) :
                new ObjectParameter("plateId", typeof(int));
    
            var plateTypeParameter = plateType.HasValue ?
                new ObjectParameter("plateType", plateType) :
                new ObjectParameter("plateType", typeof(int));
    
            var userAnwserParameter = userAnwser != null ?
                new ObjectParameter("userAnwser", userAnwser) :
                new ObjectParameter("userAnwser", typeof(string));
    
            var errorTagParameter = errorTag.HasValue ?
                new ObjectParameter("errorTag", errorTag) :
                new ObjectParameter("errorTag", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var errorContentParameter = errorContent != null ?
                new ObjectParameter("errorContent", errorContent) :
                new ObjectParameter("errorContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_AddErrorQuestion", taskidParameter, qidParameter, uidParameter, packageIdParameter, qTypeParameter, plateIdParameter, plateTypeParameter, userAnwserParameter, errorTagParameter, groupIdParameter, errorContentParameter);
        }
    
        public virtual ObjectResult<sp_GetLearnSubject_Result> sp_GetLearnSubject(Nullable<int> pid, Nullable<int> uid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetLearnSubject_Result>("sp_GetLearnSubject", pidParameter, uidParameter);
        }
    
        public virtual ObjectResult<sp_GetPackageTaskCount_Result> sp_GetPackageTaskCount(Nullable<int> uid, Nullable<int> pid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPackageTaskCount_Result>("sp_GetPackageTaskCount", uidParameter, pidParameter);
        }
    
        public virtual int sp_updateUtaskStatus(Nullable<int> status, Nullable<int> uid, Nullable<int> tid, Nullable<int> pid)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var tidParameter = tid.HasValue ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_updateUtaskStatus", statusParameter, uidParameter, tidParameter, pidParameter);
        }
    
        public virtual int sp_who_lock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_who_lock");
        }
    }
}
