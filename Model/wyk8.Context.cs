//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class wyk8Entities : DbContext
    {
        public wyk8Entities()
            : base("name=wyk8Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<T_App> T_App { get; set; }
        public virtual DbSet<T_Chapterold> T_Chapterold { get; set; }
        public virtual DbSet<T_ChildPackageLog> T_ChildPackageLog { get; set; }
        public virtual DbSet<T_ChildPackageold> T_ChildPackageold { get; set; }
        public virtual DbSet<T_ChildPackagePlateRelationold> T_ChildPackagePlateRelationold { get; set; }
        public virtual DbSet<T_Courseold> T_Courseold { get; set; }
        public virtual DbSet<T_ExamSystem> T_ExamSystem { get; set; }
        public virtual DbSet<T_ExamTypeold> T_ExamTypeold { get; set; }
        public virtual DbSet<T_FinanceCardold> T_FinanceCardold { get; set; }
        public virtual DbSet<T_Ken> T_Ken { get; set; }
        public virtual DbSet<T_Kenold> T_Kenold { get; set; }
        public virtual DbSet<T_MaterialPackageLog> T_MaterialPackageLog { get; set; }
        public virtual DbSet<T_MaterialPackageold> T_MaterialPackageold { get; set; }
        public virtual DbSet<T_Model> T_Model { get; set; }
        public virtual DbSet<T_PackageCourseRelationold> T_PackageCourseRelationold { get; set; }
        public virtual DbSet<T_Packageold> T_Packageold { get; set; }
        public virtual DbSet<T_Paperold> T_Paperold { get; set; }
        public virtual DbSet<T_PaperPlan> T_PaperPlan { get; set; }
        public virtual DbSet<T_PaperQuestionScoreold> T_PaperQuestionScoreold { get; set; }
        public virtual DbSet<T_PaperQuestionsold> T_PaperQuestionsold { get; set; }
        public virtual DbSet<T_PaperSchemaKenold> T_PaperSchemaKenold { get; set; }
        public virtual DbSet<T_PaperSchemaManualRegulationold> T_PaperSchemaManualRegulationold { get; set; }
        public virtual DbSet<T_PaperSchemaold> T_PaperSchemaold { get; set; }
        public virtual DbSet<T_PaperSchemaQuestiontypeold> T_PaperSchemaQuestiontypeold { get; set; }
        public virtual DbSet<T_Plateold> T_Plateold { get; set; }
        public virtual DbSet<T_PlateStructureRelationold> T_PlateStructureRelationold { get; set; }
        public virtual DbSet<T_PlateTagold> T_PlateTagold { get; set; }
        public virtual DbSet<T_PlateTaskRelationold> T_PlateTaskRelationold { get; set; }
        public virtual DbSet<T_QGKen> T_QGKen { get; set; }
        public virtual DbSet<T_QGKenold> T_QGKenold { get; set; }
        public virtual DbSet<T_QKen> T_QKen { get; set; }
        public virtual DbSet<T_QKenold> T_QKenold { get; set; }
        public virtual DbSet<T_Question> T_Question { get; set; }
        public virtual DbSet<T_Question_copy> T_Question_copy { get; set; }
        public virtual DbSet<T_QuestionGroupold> T_QuestionGroupold { get; set; }
        public virtual DbSet<T_Questionold> T_Questionold { get; set; }
        public virtual DbSet<T_QuestionType> T_QuestionType { get; set; }
        public virtual DbSet<T_Role> T_Role { get; set; }
        public virtual DbSet<T_RoleAuthority> T_RoleAuthority { get; set; }
        public virtual DbSet<T_RoleUser> T_RoleUser { get; set; }
        public virtual DbSet<T_Section> T_Section { get; set; }
        public virtual DbSet<T_Session> T_Session { get; set; }
        public virtual DbSet<T_Setting> T_Setting { get; set; }
        public virtual DbSet<T_SKAssociation> T_SKAssociation { get; set; }
        public virtual DbSet<T_SKAssociationold> T_SKAssociationold { get; set; }
        public virtual DbSet<T_SQAssociationold> T_SQAssociationold { get; set; }
        public virtual DbSet<T_Structure> T_Structure { get; set; }
        public virtual DbSet<T_Structure_copy> T_Structure_copy { get; set; }
        public virtual DbSet<T_Structureold> T_Structureold { get; set; }
        public virtual DbSet<T_Subject> T_Subject { get; set; }
        public virtual DbSet<T_Subjectold> T_Subjectold { get; set; }
        public virtual DbSet<T_Syllabus> T_Syllabus { get; set; }
        public virtual DbSet<T_Syllabusold> T_Syllabusold { get; set; }
        public virtual DbSet<T_Tagold> T_Tagold { get; set; }
        public virtual DbSet<T_TagTypeold> T_TagTypeold { get; set; }
        public virtual DbSet<T_Task> T_Task { get; set; }
        public virtual DbSet<T_TaskKens> T_TaskKens { get; set; }
        public virtual DbSet<T_TaskMaterialRelation> T_TaskMaterialRelation { get; set; }
        public virtual DbSet<T_TaskMaterialRelationold> T_TaskMaterialRelationold { get; set; }
        public virtual DbSet<T_Taskold> T_Taskold { get; set; }
        public virtual DbSet<T_User> T_User { get; set; }
        public virtual DbSet<T_User_copy> T_User_copy { get; set; }
        public virtual DbSet<T_User_copy1> T_User_copy1 { get; set; }
        public virtual DbSet<T_User_copy2> T_User_copy2 { get; set; }
        public virtual DbSet<T_UserLog> T_UserLog { get; set; }
        public virtual DbSet<T_UserSyllabusold> T_UserSyllabusold { get; set; }
        public virtual DbSet<T_VedioKenold> T_VedioKenold { get; set; }
        public virtual DbSet<T_Vedioold> T_Vedioold { get; set; }
        public virtual DbSet<T_VSAssociationold> T_VSAssociationold { get; set; }
        public virtual DbSet<T_ZuJuanManual> T_ZuJuanManual { get; set; }
        public virtual DbSet<kenBak0225> kenBak0225 { get; set; }
        public virtual DbSet<new_qken0417> new_qken0417 { get; set; }
        public virtual DbSet<new_question0417> new_question0417 { get; set; }
        public virtual DbSet<paper1205> paper1205 { get; set; }
        public virtual DbSet<T_Chapter> T_Chapter { get; set; }
        public virtual DbSet<T_ChildPackage> T_ChildPackage { get; set; }
        public virtual DbSet<T_ChildPackagePlateRelation> T_ChildPackagePlateRelation { get; set; }
        public virtual DbSet<T_ChildPackagePlateRelationBak> T_ChildPackagePlateRelationBak { get; set; }
        public virtual DbSet<T_Course> T_Course { get; set; }
        public virtual DbSet<T_ExamType> T_ExamType { get; set; }
        public virtual DbSet<T_FinanceCard> T_FinanceCard { get; set; }
        public virtual DbSet<T_MaterialPackage> T_MaterialPackage { get; set; }
        public virtual DbSet<T_Package> T_Package { get; set; }
        public virtual DbSet<T_PackageCourseRelation> T_PackageCourseRelation { get; set; }
        public virtual DbSet<T_Paper> T_Paper { get; set; }
        public virtual DbSet<T_PaperQuestions> T_PaperQuestions { get; set; }
        public virtual DbSet<T_PaperQuestionScore> T_PaperQuestionScore { get; set; }
        public virtual DbSet<T_PaperSchema> T_PaperSchema { get; set; }
        public virtual DbSet<T_PaperSchemaKen> T_PaperSchemaKen { get; set; }
        public virtual DbSet<T_PaperSchemaManualRegulation> T_PaperSchemaManualRegulation { get; set; }
        public virtual DbSet<T_PaperSchemaQuestiontype> T_PaperSchemaQuestiontype { get; set; }
        public virtual DbSet<T_Plate> T_Plate { get; set; }
        public virtual DbSet<T_PlateStructureRelation> T_PlateStructureRelation { get; set; }
        public virtual DbSet<T_PlateTag> T_PlateTag { get; set; }
        public virtual DbSet<T_PlateTaskRelation> T_PlateTaskRelation { get; set; }
        public virtual DbSet<T_QGKenbak> T_QGKenbak { get; set; }
        public virtual DbSet<T_QKens> T_QKens { get; set; }
        public virtual DbSet<T_Question_bak20171207> T_Question_bak20171207 { get; set; }
        public virtual DbSet<T_QuestionGroup> T_QuestionGroup { get; set; }
        public virtual DbSet<T_QuestionGroup_bak20171207> T_QuestionGroup_bak20171207 { get; set; }
        public virtual DbSet<T_QuestionGroupBak115> T_QuestionGroupBak115 { get; set; }
        public virtual DbSet<T_SQAssociation> T_SQAssociation { get; set; }
        public virtual DbSet<T_Tag> T_Tag { get; set; }
        public virtual DbSet<T_TagType> T_TagType { get; set; }
        public virtual DbSet<t_user20180424> t_user20180424 { get; set; }
        public virtual DbSet<t_user20180621> t_user20180621 { get; set; }
        public virtual DbSet<T_UserSyllabus> T_UserSyllabus { get; set; }
        public virtual DbSet<T_Vedio> T_Vedio { get; set; }
        public virtual DbSet<T_VedioKen> T_VedioKen { get; set; }
        public virtual DbSet<T_VSAssociation> T_VSAssociation { get; set; }
    
        [DbFunction("wyk8Entities", "fn_StringSplitTable")]
        public virtual IQueryable<fn_StringSplitTable_Result> fn_StringSplitTable(string str, string split)
        {
            var strParameter = str != null ?
                new ObjectParameter("str", str) :
                new ObjectParameter("str", typeof(string));
    
            var splitParameter = split != null ?
                new ObjectParameter("split", split) :
                new ObjectParameter("split", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_StringSplitTable_Result>("[wyk8Entities].[fn_StringSplitTable](@str, @split)", strParameter, splitParameter);
        }
    
        [DbFunction("wyk8Entities", "parseJSON")]
        public virtual IQueryable<parseJSON_Result> parseJSON(string jSON)
        {
            var jSONParameter = jSON != null ?
                new ObjectParameter("JSON", jSON) :
                new ObjectParameter("JSON", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<parseJSON_Result>("[wyk8Entities].[parseJSON](@JSON)", jSONParameter);
        }
    
        public virtual int P_AddCourse(string courseName, Nullable<int> examTypeId, Nullable<int> subjectId, Nullable<int> sllabusId, Nullable<int> courseId, Nullable<int> ctype, string imgSrc, ObjectParameter error)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("CourseName", courseName) :
                new ObjectParameter("CourseName", typeof(string));
    
            var examTypeIdParameter = examTypeId.HasValue ?
                new ObjectParameter("ExamTypeId", examTypeId) :
                new ObjectParameter("ExamTypeId", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("SubjectId", subjectId) :
                new ObjectParameter("SubjectId", typeof(int));
    
            var sllabusIdParameter = sllabusId.HasValue ?
                new ObjectParameter("SllabusId", sllabusId) :
                new ObjectParameter("SllabusId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var ctypeParameter = ctype.HasValue ?
                new ObjectParameter("Ctype", ctype) :
                new ObjectParameter("Ctype", typeof(int));
    
            var imgSrcParameter = imgSrc != null ?
                new ObjectParameter("ImgSrc", imgSrc) :
                new ObjectParameter("ImgSrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddCourse", courseNameParameter, examTypeIdParameter, subjectIdParameter, sllabusIdParameter, courseIdParameter, ctypeParameter, imgSrcParameter, error);
        }
    
        public virtual int P_AddQuestion(Nullable<int> qType, string sTitle, Nullable<int> uid, Nullable<int> sid, string qList)
        {
            var qTypeParameter = qType.HasValue ?
                new ObjectParameter("qType", qType) :
                new ObjectParameter("qType", typeof(int));
    
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var qListParameter = qList != null ?
                new ObjectParameter("qList", qList) :
                new ObjectParameter("qList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddQuestion", qTypeParameter, sTitleParameter, uidParameter, sidParameter, qListParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> P_AddQuestionToPaper(Nullable<int> paperId, Nullable<int> qId, Nullable<int> qType, ObjectParameter error)
        {
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var qIdParameter = qId.HasValue ?
                new ObjectParameter("QId", qId) :
                new ObjectParameter("QId", typeof(int));
    
            var qTypeParameter = qType.HasValue ?
                new ObjectParameter("QType", qType) :
                new ObjectParameter("QType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("P_AddQuestionToPaper", paperIdParameter, qIdParameter, qTypeParameter, error);
        }
    
        public virtual int P_AddStructure(Nullable<int> pId, string name, Nullable<int> parentID, ObjectParameter error)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddStructure", pIdParameter, nameParameter, parentIDParameter, error);
        }
    
        public virtual int P_AddTaskPaperQuestion(Nullable<int> pId, Nullable<int> types, string content, Nullable<bool> isFree, string joinIds, Nullable<bool> isBd, Nullable<int> bounds, Nullable<int> scores, Nullable<int> isrules, Nullable<int> plateType, string sTitle, Nullable<int> qcount, string kens, ObjectParameter error)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var typesParameter = types.HasValue ?
                new ObjectParameter("Types", types) :
                new ObjectParameter("Types", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var isFreeParameter = isFree.HasValue ?
                new ObjectParameter("IsFree", isFree) :
                new ObjectParameter("IsFree", typeof(bool));
    
            var joinIdsParameter = joinIds != null ?
                new ObjectParameter("JoinIds", joinIds) :
                new ObjectParameter("JoinIds", typeof(string));
    
            var isBdParameter = isBd.HasValue ?
                new ObjectParameter("isBd", isBd) :
                new ObjectParameter("isBd", typeof(bool));
    
            var boundsParameter = bounds.HasValue ?
                new ObjectParameter("Bounds", bounds) :
                new ObjectParameter("Bounds", typeof(int));
    
            var scoresParameter = scores.HasValue ?
                new ObjectParameter("Scores", scores) :
                new ObjectParameter("Scores", typeof(int));
    
            var isrulesParameter = isrules.HasValue ?
                new ObjectParameter("Isrules", isrules) :
                new ObjectParameter("Isrules", typeof(int));
    
            var plateTypeParameter = plateType.HasValue ?
                new ObjectParameter("PlateType", plateType) :
                new ObjectParameter("PlateType", typeof(int));
    
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            var qcountParameter = qcount.HasValue ?
                new ObjectParameter("qcount", qcount) :
                new ObjectParameter("qcount", typeof(int));
    
            var kensParameter = kens != null ?
                new ObjectParameter("kens", kens) :
                new ObjectParameter("kens", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddTaskPaperQuestion", pIdParameter, typesParameter, contentParameter, isFreeParameter, joinIdsParameter, isBdParameter, boundsParameter, scoresParameter, isrulesParameter, plateTypeParameter, sTitleParameter, qcountParameter, kensParameter, error);
        }
    
        public virtual int P_AddTaskVideo(Nullable<int> pId, string content, Nullable<bool> isFree, string joinIds, Nullable<int> plateType, string sTitle, ObjectParameter error)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var isFreeParameter = isFree.HasValue ?
                new ObjectParameter("IsFree", isFree) :
                new ObjectParameter("IsFree", typeof(bool));
    
            var joinIdsParameter = joinIds != null ?
                new ObjectParameter("JoinIds", joinIds) :
                new ObjectParameter("JoinIds", typeof(string));
    
            var plateTypeParameter = plateType.HasValue ?
                new ObjectParameter("PlateType", plateType) :
                new ObjectParameter("PlateType", typeof(int));
    
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddTaskVideo", pIdParameter, contentParameter, isFreeParameter, joinIdsParameter, plateTypeParameter, sTitleParameter, error);
        }
    
        public virtual int P_AddVedio(string vdata, string kdata, Nullable<int> syid)
        {
            var vdataParameter = vdata != null ?
                new ObjectParameter("vdata", vdata) :
                new ObjectParameter("vdata", typeof(string));
    
            var kdataParameter = kdata != null ?
                new ObjectParameter("kdata", kdata) :
                new ObjectParameter("kdata", typeof(string));
    
            var syidParameter = syid.HasValue ?
                new ObjectParameter("syid", syid) :
                new ObjectParameter("syid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AddVedio", vdataParameter, kdataParameter, syidParameter);
        }
    
        public virtual ObjectResult<P_AppAdd_Result> P_AppAdd(Nullable<int> adminId, string name, string secret, Nullable<int> typeId, ObjectParameter error)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var secretParameter = secret != null ?
                new ObjectParameter("Secret", secret) :
                new ObjectParameter("Secret", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_AppAdd_Result>("P_AppAdd", adminIdParameter, nameParameter, secretParameter, typeIdParameter, error);
        }
    
        public virtual int P_AutoSettingTaskqCount(Nullable<int> sid)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AutoSettingTaskqCount", sidParameter);
        }
    
        public virtual int P_AutoUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_AutoUpdate");
        }
    
        public virtual int P_ChapterSort(Nullable<int> sortType, Nullable<int> sortIdA, Nullable<int> sortIdB)
        {
            var sortTypeParameter = sortType.HasValue ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(int));
    
            var sortIdAParameter = sortIdA.HasValue ?
                new ObjectParameter("SortIdA", sortIdA) :
                new ObjectParameter("SortIdA", typeof(int));
    
            var sortIdBParameter = sortIdB.HasValue ?
                new ObjectParameter("SortIdB", sortIdB) :
                new ObjectParameter("SortIdB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ChapterSort", sortTypeParameter, sortIdAParameter, sortIdBParameter);
        }
    
        public virtual int P_ChildQuestionSort(Nullable<int> qida, Nullable<int> qidb)
        {
            var qidaParameter = qida.HasValue ?
                new ObjectParameter("qida", qida) :
                new ObjectParameter("qida", typeof(int));
    
            var qidbParameter = qidb.HasValue ?
                new ObjectParameter("qidb", qidb) :
                new ObjectParameter("qidb", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ChildQuestionSort", qidaParameter, qidbParameter);
        }
    
        public virtual ObjectResult<P_colCountByChapter_Result> P_colCountByChapter(Nullable<int> cid, Nullable<int> uid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_colCountByChapter_Result>("P_colCountByChapter", cidParameter, uidParameter);
        }
    
        public virtual ObjectResult<P_CollectCountByChapter_Result> P_CollectCountByChapter(Nullable<int> cid, Nullable<int> uid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_CollectCountByChapter_Result>("P_CollectCountByChapter", cidParameter, uidParameter);
        }
    
        public virtual int P_CopyCourse(Nullable<int> cId, string cName)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CopyCourse", cIdParameter, cNameParameter);
        }
    
        public virtual int P_CopyCourse2(Nullable<int> cId, string cName)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CopyCourse2", cIdParameter, cNameParameter);
        }
    
        public virtual int P_CopyPlate(string plateName, Nullable<int> plateId, Nullable<int> courseId)
        {
            var plateNameParameter = plateName != null ?
                new ObjectParameter("plateName", plateName) :
                new ObjectParameter("plateName", typeof(string));
    
            var plateIdParameter = plateId.HasValue ?
                new ObjectParameter("plateId", plateId) :
                new ObjectParameter("plateId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("courseId", courseId) :
                new ObjectParameter("courseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CopyPlate", plateNameParameter, plateIdParameter, courseIdParameter);
        }
    
        public virtual int P_CopySyllabus(string name, Nullable<int> copySid, Nullable<int> flag, ObjectParameter error)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var copySidParameter = copySid.HasValue ?
                new ObjectParameter("CopySid", copySid) :
                new ObjectParameter("CopySid", typeof(int));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CopySyllabus", nameParameter, copySidParameter, flagParameter, error);
        }
    
        public virtual int P_CourseSort(Nullable<int> sortType, Nullable<int> sortIdA, Nullable<int> sortIdB)
        {
            var sortTypeParameter = sortType.HasValue ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(int));
    
            var sortIdAParameter = sortIdA.HasValue ?
                new ObjectParameter("SortIdA", sortIdA) :
                new ObjectParameter("SortIdA", typeof(int));
    
            var sortIdBParameter = sortIdB.HasValue ?
                new ObjectParameter("SortIdB", sortIdB) :
                new ObjectParameter("SortIdB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CourseSort", sortTypeParameter, sortIdAParameter, sortIdBParameter);
        }
    
        public virtual int P_CreatePaper(string pName, Nullable<int> pTime, string qList, Nullable<int> sid)
        {
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var pTimeParameter = pTime.HasValue ?
                new ObjectParameter("pTime", pTime) :
                new ObjectParameter("pTime", typeof(int));
    
            var qListParameter = qList != null ?
                new ObjectParameter("qList", qList) :
                new ObjectParameter("qList", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreatePaper", pNameParameter, pTimeParameter, qListParameter, sidParameter);
        }
    
        public virtual int P_CreatePaperSchemaXML(Nullable<int> sId, Nullable<int> syllabusId, string sName, Nullable<int> timeSpan, string difStr, Nullable<int> compDeGree, string kenList, string questionType, string manualRegulation, ObjectParameter error)
        {
            var sIdParameter = sId.HasValue ?
                new ObjectParameter("SId", sId) :
                new ObjectParameter("SId", typeof(int));
    
            var syllabusIdParameter = syllabusId.HasValue ?
                new ObjectParameter("SyllabusId", syllabusId) :
                new ObjectParameter("SyllabusId", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("SName", sName) :
                new ObjectParameter("SName", typeof(string));
    
            var timeSpanParameter = timeSpan.HasValue ?
                new ObjectParameter("TimeSpan", timeSpan) :
                new ObjectParameter("TimeSpan", typeof(int));
    
            var difStrParameter = difStr != null ?
                new ObjectParameter("DifStr", difStr) :
                new ObjectParameter("DifStr", typeof(string));
    
            var compDeGreeParameter = compDeGree.HasValue ?
                new ObjectParameter("CompDeGree", compDeGree) :
                new ObjectParameter("CompDeGree", typeof(int));
    
            var kenListParameter = kenList != null ?
                new ObjectParameter("KenList", kenList) :
                new ObjectParameter("KenList", typeof(string));
    
            var questionTypeParameter = questionType != null ?
                new ObjectParameter("QuestionType", questionType) :
                new ObjectParameter("QuestionType", typeof(string));
    
            var manualRegulationParameter = manualRegulation != null ?
                new ObjectParameter("ManualRegulation", manualRegulation) :
                new ObjectParameter("ManualRegulation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreatePaperSchemaXML", sIdParameter, syllabusIdParameter, sNameParameter, timeSpanParameter, difStrParameter, compDeGreeParameter, kenListParameter, questionTypeParameter, manualRegulationParameter, error);
        }
    
        public virtual int P_CreatePaperXML(string paperDetails, string paperName, ObjectParameter error)
        {
            var paperDetailsParameter = paperDetails != null ?
                new ObjectParameter("PaperDetails", paperDetails) :
                new ObjectParameter("PaperDetails", typeof(string));
    
            var paperNameParameter = paperName != null ?
                new ObjectParameter("PaperName", paperName) :
                new ObjectParameter("PaperName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_CreatePaperXML", paperDetailsParameter, paperNameParameter, error);
        }
    
        public virtual int P_DelAdmin(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelAdmin", useridParameter);
        }
    
        public virtual int P_DelPaper(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelPaper", pidParameter);
        }
    
        public virtual int P_DelPaperQuestion(Nullable<int> qid)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelPaperQuestion", qidParameter);
        }
    
        public virtual int P_DelPlate(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelPlate", pidParameter);
        }
    
        public virtual int P_DelQuestion(Nullable<int> id, Nullable<int> sid, ObjectParameter error)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelQuestion", idParameter, sidParameter, error);
        }
    
        public virtual int P_DelQuestionGroup(Nullable<int> id, Nullable<int> sid, ObjectParameter error)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelQuestionGroup", idParameter, sidParameter, error);
        }
    
        public virtual int P_DelQuestions(string idList, Nullable<int> sid, ObjectParameter error)
        {
            var idListParameter = idList != null ?
                new ObjectParameter("IdList", idList) :
                new ObjectParameter("IdList", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelQuestions", idListParameter, sidParameter, error);
        }
    
        public virtual int P_DelRole(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelRole", roleIdParameter);
        }
    
        public virtual int P_DelStruct(Nullable<int> parentid, Nullable<int> sid)
        {
            var parentidParameter = parentid.HasValue ?
                new ObjectParameter("parentid", parentid) :
                new ObjectParameter("parentid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelStruct", parentidParameter, sidParameter);
        }
    
        public virtual int P_DelSyllabus(Nullable<int> syllid)
        {
            var syllidParameter = syllid.HasValue ?
                new ObjectParameter("syllid", syllid) :
                new ObjectParameter("syllid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_DelSyllabus", syllidParameter);
        }
    
        public virtual int P_EditQuestion(Nullable<int> sid, Nullable<int> qid, Nullable<int> qtype, string title, string option, string answer, string analysis, Nullable<int> difficulty, string kenid, string tags, string creator, string kenname, string tagname, string vedioUrl, string qken)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var qtypeParameter = qtype.HasValue ?
                new ObjectParameter("qtype", qtype) :
                new ObjectParameter("qtype", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var optionParameter = option != null ?
                new ObjectParameter("option", option) :
                new ObjectParameter("option", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var analysisParameter = analysis != null ?
                new ObjectParameter("analysis", analysis) :
                new ObjectParameter("analysis", typeof(string));
    
            var difficultyParameter = difficulty.HasValue ?
                new ObjectParameter("difficulty", difficulty) :
                new ObjectParameter("difficulty", typeof(int));
    
            var kenidParameter = kenid != null ?
                new ObjectParameter("kenid", kenid) :
                new ObjectParameter("kenid", typeof(string));
    
            var tagsParameter = tags != null ?
                new ObjectParameter("tags", tags) :
                new ObjectParameter("tags", typeof(string));
    
            var creatorParameter = creator != null ?
                new ObjectParameter("creator", creator) :
                new ObjectParameter("creator", typeof(string));
    
            var kennameParameter = kenname != null ?
                new ObjectParameter("kenname", kenname) :
                new ObjectParameter("kenname", typeof(string));
    
            var tagnameParameter = tagname != null ?
                new ObjectParameter("tagname", tagname) :
                new ObjectParameter("tagname", typeof(string));
    
            var vedioUrlParameter = vedioUrl != null ?
                new ObjectParameter("vedioUrl", vedioUrl) :
                new ObjectParameter("vedioUrl", typeof(string));
    
            var qkenParameter = qken != null ?
                new ObjectParameter("qken", qken) :
                new ObjectParameter("qken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_EditQuestion", sidParameter, qidParameter, qtypeParameter, titleParameter, optionParameter, answerParameter, analysisParameter, difficultyParameter, kenidParameter, tagsParameter, creatorParameter, kennameParameter, tagnameParameter, vedioUrlParameter, qkenParameter);
        }
    
        public virtual int P_EditTaskPaperQuestion(Nullable<int> taskId, Nullable<int> pId, Nullable<int> types, string content, Nullable<bool> isFree, string joinIds, Nullable<bool> isBd, Nullable<int> bounds, Nullable<int> scores, Nullable<int> isrules, string sTitle, Nullable<int> qcount, string kens, ObjectParameter error)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            var typesParameter = types.HasValue ?
                new ObjectParameter("Types", types) :
                new ObjectParameter("Types", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var isFreeParameter = isFree.HasValue ?
                new ObjectParameter("IsFree", isFree) :
                new ObjectParameter("IsFree", typeof(bool));
    
            var joinIdsParameter = joinIds != null ?
                new ObjectParameter("JoinIds", joinIds) :
                new ObjectParameter("JoinIds", typeof(string));
    
            var isBdParameter = isBd.HasValue ?
                new ObjectParameter("isBd", isBd) :
                new ObjectParameter("isBd", typeof(bool));
    
            var boundsParameter = bounds.HasValue ?
                new ObjectParameter("Bounds", bounds) :
                new ObjectParameter("Bounds", typeof(int));
    
            var scoresParameter = scores.HasValue ?
                new ObjectParameter("Scores", scores) :
                new ObjectParameter("Scores", typeof(int));
    
            var isrulesParameter = isrules.HasValue ?
                new ObjectParameter("Isrules", isrules) :
                new ObjectParameter("Isrules", typeof(int));
    
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            var qcountParameter = qcount.HasValue ?
                new ObjectParameter("qcount", qcount) :
                new ObjectParameter("qcount", typeof(int));
    
            var kensParameter = kens != null ?
                new ObjectParameter("kens", kens) :
                new ObjectParameter("kens", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_EditTaskPaperQuestion", taskIdParameter, pIdParameter, typesParameter, contentParameter, isFreeParameter, joinIdsParameter, isBdParameter, boundsParameter, scoresParameter, isrulesParameter, sTitleParameter, qcountParameter, kensParameter, error);
        }
    
        public virtual int P_EditTaskVideo(string content, Nullable<bool> isFree, string joinIds, Nullable<int> tid, string sTitle, ObjectParameter error)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var isFreeParameter = isFree.HasValue ?
                new ObjectParameter("IsFree", isFree) :
                new ObjectParameter("IsFree", typeof(bool));
    
            var joinIdsParameter = joinIds != null ?
                new ObjectParameter("JoinIds", joinIds) :
                new ObjectParameter("JoinIds", typeof(string));
    
            var tidParameter = tid.HasValue ?
                new ObjectParameter("Tid", tid) :
                new ObjectParameter("Tid", typeof(int));
    
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_EditTaskVideo", contentParameter, isFreeParameter, joinIdsParameter, tidParameter, sTitleParameter, error);
        }
    
        public virtual int P_EditUser(Nullable<int> userid, Nullable<int> roleid, Nullable<int> appid, Nullable<int> adminid, string ip, string code, string username, string pwd, string nickname, string power)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var appidParameter = appid.HasValue ?
                new ObjectParameter("appid", appid) :
                new ObjectParameter("appid", typeof(int));
    
            var adminidParameter = adminid.HasValue ?
                new ObjectParameter("adminid", adminid) :
                new ObjectParameter("adminid", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            var nicknameParameter = nickname != null ?
                new ObjectParameter("nickname", nickname) :
                new ObjectParameter("nickname", typeof(string));
    
            var powerParameter = power != null ?
                new ObjectParameter("power", power) :
                new ObjectParameter("power", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_EditUser", useridParameter, roleidParameter, appidParameter, adminidParameter, ipParameter, codeParameter, usernameParameter, pwdParameter, nicknameParameter, powerParameter);
        }
    
        public virtual ObjectResult<P_ErrorCountByChapter_Result> P_ErrorCountByChapter(Nullable<int> cid, Nullable<int> uid, Nullable<int> pid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ErrorCountByChapter_Result>("P_ErrorCountByChapter", cidParameter, uidParameter, pidParameter);
        }
    
        public virtual ObjectResult<P_ErrorCountByChapterNew_Result> P_ErrorCountByChapterNew(Nullable<int> cid, Nullable<int> uid, Nullable<int> pid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_ErrorCountByChapterNew_Result>("P_ErrorCountByChapterNew", cidParameter, uidParameter, pidParameter);
        }
    
        public virtual int P_ExaminePaper(Nullable<int> paperId)
        {
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("paperId", paperId) :
                new ObjectParameter("paperId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ExaminePaper", paperIdParameter);
        }
    
        public virtual ObjectResult<P_GetChapterCollectInfo_Result> P_GetChapterCollectInfo(Nullable<int> cid, Nullable<int> ctype, Nullable<int> uid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var ctypeParameter = ctype.HasValue ?
                new ObjectParameter("ctype", ctype) :
                new ObjectParameter("ctype", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetChapterCollectInfo_Result>("P_GetChapterCollectInfo", cidParameter, ctypeParameter, uidParameter);
        }
    
        public virtual ObjectResult<P_GetChapterErrorInfo_Result> P_GetChapterErrorInfo(Nullable<int> cid, Nullable<int> ctype, Nullable<int> uid, Nullable<int> pid)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var ctypeParameter = ctype.HasValue ?
                new ObjectParameter("ctype", ctype) :
                new ObjectParameter("ctype", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetChapterErrorInfo_Result>("P_GetChapterErrorInfo", cidParameter, ctypeParameter, uidParameter, pidParameter);
        }
    
        public virtual int P_GetPaperSchemaManualRegulation(Nullable<int> sid, ObjectParameter error)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_GetPaperSchemaManualRegulation", sidParameter, error);
        }
    
        public virtual ObjectResult<P_GetQuestion_Result> P_GetQuestion(Nullable<int> type, string data, ObjectParameter error)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetQuestion_Result>("P_GetQuestion", typeParameter, dataParameter, error);
        }
    
        public virtual ObjectResult<P_GetTaskQcount_Result> P_GetTaskQcount(string qlist, Nullable<int> sylid)
        {
            var qlistParameter = qlist != null ?
                new ObjectParameter("qlist", qlist) :
                new ObjectParameter("qlist", typeof(string));
    
            var sylidParameter = sylid.HasValue ?
                new ObjectParameter("sylid", sylid) :
                new ObjectParameter("sylid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_GetTaskQcount_Result>("P_GetTaskQcount", qlistParameter, sylidParameter);
        }
    
        public virtual int P_ImportChapter(string xML, Nullable<int> syllabusID)
        {
            var xMLParameter = xML != null ?
                new ObjectParameter("XML", xML) :
                new ObjectParameter("XML", typeof(string));
    
            var syllabusIDParameter = syllabusID.HasValue ?
                new ObjectParameter("SyllabusID", syllabusID) :
                new ObjectParameter("SyllabusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ImportChapter", xMLParameter, syllabusIDParameter);
        }
    
        public virtual int P_ImportQuestions(string parentJson, string childJson, Nullable<int> syllabusID, string uName)
        {
            var parentJsonParameter = parentJson != null ?
                new ObjectParameter("ParentJson", parentJson) :
                new ObjectParameter("ParentJson", typeof(string));
    
            var childJsonParameter = childJson != null ?
                new ObjectParameter("ChildJson", childJson) :
                new ObjectParameter("ChildJson", typeof(string));
    
            var syllabusIDParameter = syllabusID.HasValue ?
                new ObjectParameter("SyllabusID", syllabusID) :
                new ObjectParameter("SyllabusID", typeof(int));
    
            var uNameParameter = uName != null ?
                new ObjectParameter("uName", uName) :
                new ObjectParameter("uName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ImportQuestions", parentJsonParameter, childJsonParameter, syllabusIDParameter, uNameParameter);
        }
    
        public virtual int P_ImportStructure(string strList)
        {
            var strListParameter = strList != null ?
                new ObjectParameter("strList", strList) :
                new ObjectParameter("strList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ImportStructure", strListParameter);
        }
    
        public virtual ObjectResult<P_MyCollectExam_Result> P_MyCollectExam(Nullable<int> uid, Nullable<int> sid, Nullable<int> stype)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var stypeParameter = stype.HasValue ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_MyCollectExam_Result>("P_MyCollectExam", uidParameter, sidParameter, stypeParameter);
        }
    
        public virtual ObjectResult<P_MyErrorExam_Result> P_MyErrorExam(Nullable<int> uid, Nullable<int> sid, Nullable<int> stype, Nullable<int> pid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var stypeParameter = stype.HasValue ?
                new ObjectParameter("stype", stype) :
                new ObjectParameter("stype", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_MyErrorExam_Result>("P_MyErrorExam", uidParameter, sidParameter, stypeParameter, pidParameter);
        }
    
        public virtual int P_PackageCourseSort(Nullable<int> courseAId, Nullable<int> courseBId)
        {
            var courseAIdParameter = courseAId.HasValue ?
                new ObjectParameter("CourseAId", courseAId) :
                new ObjectParameter("CourseAId", typeof(int));
    
            var courseBIdParameter = courseBId.HasValue ?
                new ObjectParameter("CourseBId", courseBId) :
                new ObjectParameter("CourseBId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_PackageCourseSort", courseAIdParameter, courseBIdParameter);
        }
    
        public virtual ObjectResult<P_QueryNodeCollect_Result> P_QueryNodeCollect(Nullable<int> uid, Nullable<int> sid, Nullable<int> minId, Nullable<int> maxId, Nullable<int> qtype)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var minIdParameter = minId.HasValue ?
                new ObjectParameter("minId", minId) :
                new ObjectParameter("minId", typeof(int));
    
            var maxIdParameter = maxId.HasValue ?
                new ObjectParameter("maxId", maxId) :
                new ObjectParameter("maxId", typeof(int));
    
            var qtypeParameter = qtype.HasValue ?
                new ObjectParameter("qtype", qtype) :
                new ObjectParameter("qtype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_QueryNodeCollect_Result>("P_QueryNodeCollect", uidParameter, sidParameter, minIdParameter, maxIdParameter, qtypeParameter);
        }
    
        public virtual ObjectResult<P_QueryNodeErrorQ_Result> P_QueryNodeErrorQ(Nullable<int> uid, Nullable<int> sid, Nullable<int> minId, Nullable<int> maxId, Nullable<int> qtype)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var minIdParameter = minId.HasValue ?
                new ObjectParameter("minId", minId) :
                new ObjectParameter("minId", typeof(int));
    
            var maxIdParameter = maxId.HasValue ?
                new ObjectParameter("maxId", maxId) :
                new ObjectParameter("maxId", typeof(int));
    
            var qtypeParameter = qtype.HasValue ?
                new ObjectParameter("qtype", qtype) :
                new ObjectParameter("qtype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_QueryNodeErrorQ_Result>("P_QueryNodeErrorQ", uidParameter, sidParameter, minIdParameter, maxIdParameter, qtypeParameter);
        }
    
        public virtual int P_QuestionSetKen(string qidList, string kidList, string kNameList, Nullable<int> sid)
        {
            var qidListParameter = qidList != null ?
                new ObjectParameter("QidList", qidList) :
                new ObjectParameter("QidList", typeof(string));
    
            var kidListParameter = kidList != null ?
                new ObjectParameter("KidList", kidList) :
                new ObjectParameter("KidList", typeof(string));
    
            var kNameListParameter = kNameList != null ?
                new ObjectParameter("KNameList", kNameList) :
                new ObjectParameter("KNameList", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_QuestionSetKen", qidListParameter, kidListParameter, kNameListParameter, sidParameter);
        }
    
        public virtual int P_QuestionSort(Nullable<int> qid, Nullable<int> isup)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var isupParameter = isup.HasValue ?
                new ObjectParameter("isup", isup) :
                new ObjectParameter("isup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_QuestionSort", qidParameter, isupParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> P_QuestionSortForPaper(Nullable<int> qid, Nullable<int> pid, Nullable<int> type, Nullable<int> upOrDown)
        {
            var qidParameter = qid.HasValue ?
                new ObjectParameter("qid", qid) :
                new ObjectParameter("qid", typeof(int));
    
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var upOrDownParameter = upOrDown.HasValue ?
                new ObjectParameter("UpOrDown", upOrDown) :
                new ObjectParameter("UpOrDown", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("P_QuestionSortForPaper", qidParameter, pidParameter, typeParameter, upOrDownParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> P_QuestionToSyll(string qidList, string kidList, Nullable<int> sid)
        {
            var qidListParameter = qidList != null ?
                new ObjectParameter("qidList", qidList) :
                new ObjectParameter("qidList", typeof(string));
    
            var kidListParameter = kidList != null ?
                new ObjectParameter("kidList", kidList) :
                new ObjectParameter("kidList", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("P_QuestionToSyll", qidListParameter, kidListParameter, sidParameter);
        }
    
        public virtual int p_questionUpdateService(string qidList)
        {
            var qidListParameter = qidList != null ?
                new ObjectParameter("qidList", qidList) :
                new ObjectParameter("qidList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_questionUpdateService", qidListParameter);
        }
    
        public virtual int P_QuoteVedio(string vsids, Nullable<int> tosid, string kenids, string kename)
        {
            var vsidsParameter = vsids != null ?
                new ObjectParameter("vsids", vsids) :
                new ObjectParameter("vsids", typeof(string));
    
            var tosidParameter = tosid.HasValue ?
                new ObjectParameter("tosid", tosid) :
                new ObjectParameter("tosid", typeof(int));
    
            var kenidsParameter = kenids != null ?
                new ObjectParameter("kenids", kenids) :
                new ObjectParameter("kenids", typeof(string));
    
            var kenameParameter = kename != null ?
                new ObjectParameter("kename", kename) :
                new ObjectParameter("kename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_QuoteVedio", vsidsParameter, tosidParameter, kenidsParameter, kenameParameter);
        }
    
        public virtual int P_ResetVideoKen(string vId, string kIdList)
        {
            var vIdParameter = vId != null ?
                new ObjectParameter("vId", vId) :
                new ObjectParameter("vId", typeof(string));
    
            var kIdListParameter = kIdList != null ?
                new ObjectParameter("kIdList", kIdList) :
                new ObjectParameter("kIdList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ResetVideoKen", vIdParameter, kIdListParameter);
        }
    
        public virtual int P_SaveQuestionScore(Nullable<int> pid, Nullable<int> sid, Nullable<int> uid, string pname, Nullable<int> ptime, string questionScore)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var ptimeParameter = ptime.HasValue ?
                new ObjectParameter("ptime", ptime) :
                new ObjectParameter("ptime", typeof(int));
    
            var questionScoreParameter = questionScore != null ?
                new ObjectParameter("questionScore", questionScore) :
                new ObjectParameter("questionScore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_SaveQuestionScore", pidParameter, sidParameter, uidParameter, pnameParameter, ptimeParameter, questionScoreParameter);
        }
    
        public virtual int P_SetPaperDiff(Nullable<int> pId)
        {
            var pIdParameter = pId.HasValue ?
                new ObjectParameter("PId", pId) :
                new ObjectParameter("PId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_SetPaperDiff", pIdParameter);
        }
    
        public virtual int P_SetQuestionScore(Nullable<int> pid, string questionScore)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var questionScoreParameter = questionScore != null ?
                new ObjectParameter("questionScore", questionScore) :
                new ObjectParameter("questionScore", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_SetQuestionScore", pidParameter, questionScoreParameter);
        }
    
        public virtual int P_TagSort(Nullable<int> sortType, Nullable<int> sortIdA, Nullable<int> sortIdB)
        {
            var sortTypeParameter = sortType.HasValue ?
                new ObjectParameter("SortType", sortType) :
                new ObjectParameter("SortType", typeof(int));
    
            var sortIdAParameter = sortIdA.HasValue ?
                new ObjectParameter("SortIdA", sortIdA) :
                new ObjectParameter("SortIdA", typeof(int));
    
            var sortIdBParameter = sortIdB.HasValue ?
                new ObjectParameter("SortIdB", sortIdB) :
                new ObjectParameter("SortIdB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_TagSort", sortTypeParameter, sortIdAParameter, sortIdBParameter);
        }
    
        public virtual int P_TaskQuestionSort(Nullable<int> sortIdA, Nullable<int> sortIdB, Nullable<int> tid)
        {
            var sortIdAParameter = sortIdA.HasValue ?
                new ObjectParameter("SortIdA", sortIdA) :
                new ObjectParameter("SortIdA", typeof(int));
    
            var sortIdBParameter = sortIdB.HasValue ?
                new ObjectParameter("SortIdB", sortIdB) :
                new ObjectParameter("SortIdB", typeof(int));
    
            var tidParameter = tid.HasValue ?
                new ObjectParameter("Tid", tid) :
                new ObjectParameter("Tid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_TaskQuestionSort", sortIdAParameter, sortIdBParameter, tidParameter);
        }
    
        public virtual int p_updatePaperService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updatePaperService");
        }
    
        public virtual int P_UpdatePass(Nullable<int> userId, string newPass)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var newPassParameter = newPass != null ?
                new ObjectParameter("newPass", newPass) :
                new ObjectParameter("newPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_UpdatePass", userIdParameter, newPassParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> p_UpdateQuestion(string sTitle, string kenList, Nullable<int> difficulty, string sOption, string answer, string analysis, string tagList, string kenListName, string tagListName, Nullable<int> id, string files, string score, string vedio, Nullable<int> sid, string uname, string insertSql)
        {
            var sTitleParameter = sTitle != null ?
                new ObjectParameter("sTitle", sTitle) :
                new ObjectParameter("sTitle", typeof(string));
    
            var kenListParameter = kenList != null ?
                new ObjectParameter("kenList", kenList) :
                new ObjectParameter("kenList", typeof(string));
    
            var difficultyParameter = difficulty.HasValue ?
                new ObjectParameter("difficulty", difficulty) :
                new ObjectParameter("difficulty", typeof(int));
    
            var sOptionParameter = sOption != null ?
                new ObjectParameter("sOption", sOption) :
                new ObjectParameter("sOption", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var analysisParameter = analysis != null ?
                new ObjectParameter("analysis", analysis) :
                new ObjectParameter("analysis", typeof(string));
    
            var tagListParameter = tagList != null ?
                new ObjectParameter("tagList", tagList) :
                new ObjectParameter("tagList", typeof(string));
    
            var kenListNameParameter = kenListName != null ?
                new ObjectParameter("kenListName", kenListName) :
                new ObjectParameter("kenListName", typeof(string));
    
            var tagListNameParameter = tagListName != null ?
                new ObjectParameter("tagListName", tagListName) :
                new ObjectParameter("tagListName", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var filesParameter = files != null ?
                new ObjectParameter("files", files) :
                new ObjectParameter("files", typeof(string));
    
            var scoreParameter = score != null ?
                new ObjectParameter("score", score) :
                new ObjectParameter("score", typeof(string));
    
            var vedioParameter = vedio != null ?
                new ObjectParameter("vedio", vedio) :
                new ObjectParameter("vedio", typeof(string));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var insertSqlParameter = insertSql != null ?
                new ObjectParameter("insertSql", insertSql) :
                new ObjectParameter("insertSql", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("p_UpdateQuestion", sTitleParameter, kenListParameter, difficultyParameter, sOptionParameter, answerParameter, analysisParameter, tagListParameter, kenListNameParameter, tagListNameParameter, idParameter, filesParameter, scoreParameter, vedioParameter, sidParameter, unameParameter, insertSqlParameter);
        }
    
        public virtual int p_updateTaskService(Nullable<int> taskId)
        {
            var taskIdParameter = taskId.HasValue ?
                new ObjectParameter("taskId", taskId) :
                new ObjectParameter("taskId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("p_updateTaskService", taskIdParameter);
        }
    
        public virtual int P_UpdateVideo(Nullable<int> vId, string kIdList, string vUrl, string vName, string idAry)
        {
            var vIdParameter = vId.HasValue ?
                new ObjectParameter("vId", vId) :
                new ObjectParameter("vId", typeof(int));
    
            var kIdListParameter = kIdList != null ?
                new ObjectParameter("kIdList", kIdList) :
                new ObjectParameter("kIdList", typeof(string));
    
            var vUrlParameter = vUrl != null ?
                new ObjectParameter("vUrl", vUrl) :
                new ObjectParameter("vUrl", typeof(string));
    
            var vNameParameter = vName != null ?
                new ObjectParameter("vName", vName) :
                new ObjectParameter("vName", typeof(string));
    
            var idAryParameter = idAry != null ?
                new ObjectParameter("idAry", idAry) :
                new ObjectParameter("idAry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_UpdateVideo", vIdParameter, kIdListParameter, vUrlParameter, vNameParameter, idAryParameter);
        }
    
        public virtual int P_upKenUpQservice(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_upKenUpQservice", idParameter);
        }
    
        public virtual ObjectResult<P_UserLogin_Result> P_UserLogin(Nullable<int> adminId, Nullable<int> appId, string name, string pass, string ip, string area, ObjectParameter error)
        {
            var adminIdParameter = adminId.HasValue ?
                new ObjectParameter("AdminId", adminId) :
                new ObjectParameter("AdminId", typeof(int));
    
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("AppId", appId) :
                new ObjectParameter("AppId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var areaParameter = area != null ?
                new ObjectParameter("Area", area) :
                new ObjectParameter("Area", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<P_UserLogin_Result>("P_UserLogin", adminIdParameter, appIdParameter, nameParameter, passParameter, ipParameter, areaParameter, error);
        }
    
        public virtual int P_ZuJuan(string planName, Nullable<int> planType, Nullable<double> planScore, Nullable<int> planTime, Nullable<int> createUser, Nullable<int> sid, Nullable<int> planId, string paperPlanInfo, string paperQlist)
        {
            var planNameParameter = planName != null ?
                new ObjectParameter("planName", planName) :
                new ObjectParameter("planName", typeof(string));
    
            var planTypeParameter = planType.HasValue ?
                new ObjectParameter("planType", planType) :
                new ObjectParameter("planType", typeof(int));
    
            var planScoreParameter = planScore.HasValue ?
                new ObjectParameter("planScore", planScore) :
                new ObjectParameter("planScore", typeof(double));
    
            var planTimeParameter = planTime.HasValue ?
                new ObjectParameter("planTime", planTime) :
                new ObjectParameter("planTime", typeof(int));
    
            var createUserParameter = createUser.HasValue ?
                new ObjectParameter("createUser", createUser) :
                new ObjectParameter("createUser", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            var planIdParameter = planId.HasValue ?
                new ObjectParameter("PlanId", planId) :
                new ObjectParameter("PlanId", typeof(int));
    
            var paperPlanInfoParameter = paperPlanInfo != null ?
                new ObjectParameter("paperPlanInfo", paperPlanInfo) :
                new ObjectParameter("paperPlanInfo", typeof(string));
    
            var paperQlistParameter = paperQlist != null ?
                new ObjectParameter("paperQlist", paperQlist) :
                new ObjectParameter("paperQlist", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("P_ZuJuan", planNameParameter, planTypeParameter, planScoreParameter, planTimeParameter, createUserParameter, sidParameter, planIdParameter, paperPlanInfoParameter, paperQlistParameter);
        }
    
        public virtual ObjectResult<sp_GetPaperKenList_Result> sp_GetPaperKenList(Nullable<int> pid, Nullable<int> sid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var sidParameter = sid.HasValue ?
                new ObjectParameter("sid", sid) :
                new ObjectParameter("sid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPaperKenList_Result>("sp_GetPaperKenList", pidParameter, sidParameter);
        }
    
        public virtual int sp_who_lock()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_who_lock");
        }
    }
}
